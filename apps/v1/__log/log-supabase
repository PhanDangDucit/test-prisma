supabase:: SupabaseClient {
  supabaseUrl: 'https://ovctorxygyldkoecsgrj.supabase.co',
  supabaseKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE',
  realtimeUrl: 'wss://ovctorxygyldkoecsgrj.supabase.co/realtime/v1',
  authUrl: 'https://ovctorxygyldkoecsgrj.supabase.co/auth/v1',
  storageUrl: 'https://ovctorxygyldkoecsgrj.supabase.co/storage/v1',
  functionsUrl: 'https://ovctorxygyldkoecsgrj.supabase.co/functions/v1',
  storageKey: 'sb-ovctorxygyldkoecsgrj-auth-token',
  headers: { 'X-Client-Info': 'supabase-ssr/0.3.0' },
  auth: SupabaseAuthClient {
    memoryStorage: null,
    stateChangeEmitters: Map(1) { '5e8abb56-eb31-4f6e-beed-42aa0a47db68' => [Object] },
    autoRefreshTicker: null,
    visibilityChangedCallback: null,
    refreshingDeferred: null,
    initializePromise: Promise {
      <pending>,
      [Symbol(async_id_symbol)]: 86580,
      [Symbol(trigger_async_id_symbol)]: 86538,
      [Symbol(kResourceStore)]: undefined,
      [Symbol(kResourceStore)]: [Object],
      [Symbol(kResourceStore)]: [Object],
      [Symbol(kResourceStore)]: undefined,
      [Symbol(kResourceStore)]: undefined,
      [Symbol(kResourceStore)]: [Object],
      [Symbol(kResourceStore)]: [Object]
    },
    detectSessionInUrl: false,
    hasCustomAuthorizationHeader: false,
    suppressGetSessionWarning: false,
    lockAcquired: true,
    pendingInLock: [ [Promise] ],
    broadcastChannel: null,
    logger: [Function: log],
    instanceID: 0,
    logDebugMessages: false,
    persistSession: true,
    storageKey: 'sb-ovctorxygyldkoecsgrj-auth-token',
    autoRefreshToken: false,
    admin: GoTrueAdminApi {
      url: 'https://ovctorxygyldkoecsgrj.supabase.co/auth/v1',
      headers: [Object],
      fetch: [Function (anonymous)],
      mfa: [Object]
    },
    url: 'https://ovctorxygyldkoecsgrj.supabase.co/auth/v1',
    headers: {
      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE',
      apikey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE',
      'X-Client-Info': 'supabase-ssr/0.3.0'
    },
    fetch: [Function (anonymous)],
    lock: [AsyncFunction: lockNoOp],
    flowType: 'pkce',
    mfa: {
      verify: [Function: bound _verify] AsyncFunction,
      enroll: [Function: bound _enroll] AsyncFunction,
      unenroll: [Function: bound _unenroll] AsyncFunction,
      challenge: [Function: bound _challenge] AsyncFunction,
      listFactors: [Function: bound _listFactors] AsyncFunction,
      challengeAndVerify: [Function: bound _challengeAndVerify] AsyncFunction,
      getAuthenticatorAssuranceLevel: [Function: bound _getAuthenticatorAssuranceLevel] AsyncFunction
    },
    storage: {
      isServer: true,
      getItem: [AsyncFunction: getItem],
      setItem: [AsyncFunction: setItem],
      removeItem: [AsyncFunction: removeItem]
    }
  },
  fetch: [Function (anonymous)],
  realtime: RealtimeClient {
    accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE',
    apiKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE',
    channels: [],
    endPoint: 'wss://ovctorxygyldkoecsgrj.supabase.co/realtime/v1/websocket',
    headers: { 'X-Client-Info': 'supabase-ssr/0.3.0' },
    params: {
      apikey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im92Y3Rvcnh5Z3lsZGtvZWNzZ3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYxODg1MTAsImV4cCI6MjAzMTc2NDUxMH0.mcSjA58y_JlG1gi_iFuVD99H7Abw7zv4k5W6JUkDrbE'
    },
    timeout: 10000,
    heartbeatIntervalMs: 30000,
    heartbeatTimer: undefined,
    pendingHeartbeatRef: null,
    ref: 0,
    logger: [Function: noop],
    conn: null,
    sendBuffer: [],
    serializer: Serializer { HEADER_LENGTH: 1 },
    stateChangeCallbacks: { open: [], close: [], error: [], message: [] },
    _resolveFetch: [Function (anonymous)],
    transport: null,
    reconnectAfterMs: [Function (anonymous)],
    encode: [Function (anonymous)],
    decode: [Function: bound decode],
    reconnectTimer: Timer {
      callback: [AsyncFunction (anonymous)],
      timerCalc: [Function (anonymous)],
      timer: undefined,
      tries: 0
    },
    fetch: [Function (anonymous)]
  },
  rest: PostgrestClient {
    url: 'https://ovctorxygyldkoecsgrj.supabase.co/rest/v1',
    headers: { 'X-Client-Info': 'supabase-ssr/0.3.0' },
    schemaName: 'public',
    fetch: [Function (anonymous)]
  }
}